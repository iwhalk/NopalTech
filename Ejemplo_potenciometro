//Programa de ejemplo de transmisor + potenciometro

#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>

#define JOY_X A5
#define JOY_Y A4

struct Posicion {
  byte Pos_X;
  byte Pos_Y;
};

struct Valor{
  int Pos_X;
  int Pos_Y;
};

Posicion Movimiento;
Valor Lecturas;

RF24 transmisor(9, 10);

const byte direccion[][6] = {"00001"};
boolean buttonState = 0;

void setup() {

  transmisor.begin();
  Serial.begin(9600);
  
  transmisor.openWritingPipe(direccion[0]);
  transmisor.setPALevel(RF24_PA_MAX);
  
}
void loop() {
  
    byte Angulo = (Lecturas.Pos_X*180)/279;
    Lecturas.Pos_X = analogRead(JOY_X);

            Serial.print("El robot se va a mover: "); 
           // Serial.println(Lecturas.Pos_X);
                   
            Serial.print(Angulo); 
            Serial.println(" en el eje X");
  
  transmisor.stopListening();
  
  transmisor.write(&Angulo, sizeof(Angulo));
}
==============================================================================================================================
\\Programa de ejemplo de receptor + servo

#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>
#include <Servo.h>

RF24 receptor(9, 10);
const byte direccion[][6] = {"00001"};
Servo MicroServo;

void setup() {
 
  
  MicroServo.attach(5);
  receptor.begin();

  receptor.openReadingPipe(1, direccion[0]);
  receptor.setPALevel(RF24_PA_MAX);
}

void loop() {
  
  delay(5);
  
  receptor.startListening();
  
  if ( receptor.available()) {
    while (receptor.available()) {
      int anguloV = 0;
      receptor.read(&anguloV, sizeof(anguloV));
      MicroServo.write(anguloV);
    }
  }
}
